pip install pycryptodome

\\
from Crypto.Cipher import DES3
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad

def encrypt_3des_cbc(plaintext, key, iv):
    cipher = DES3.new(key, DES3.MODE_CBC, iv)
    padded_text = pad(plaintext.encode(), DES3.block_size)
    ciphertext = cipher.encrypt(padded_text)
    return ciphertext

def decrypt_3des_cbc(ciphertext, key, iv):
    cipher = DES3.new(key, DES3.MODE_CBC, iv)
    decrypted_padded = cipher.decrypt(ciphertext)
    plaintext = unpad(decrypted_padded, DES3.block_size)
    return plaintext.decode()

# Generate a 24-byte key for 3DES (must be either 16 or 24 bytes)
key = DES3.adjust_key_parity(get_random_bytes(24))

# Generate random IV (8 bytes for DES/3DES)
iv = get_random_bytes(8)

plaintext = "This is a secret message to encrypt using 3DES CBC mode."

print("Plaintext:", plaintext)

ciphertext = encrypt_3des_cbc(plaintext, key, iv)
print("Ciphertext (hex):", ciphertext.hex())

decrypted = decrypt_3des_cbc(ciphertext, key, iv)
print("Decrypted text:", decrypted)
